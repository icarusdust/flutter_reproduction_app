# scripts:
#   - &codesign #Reuse codesigning script
#     name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
#     script: keychain initialize
#     name: Fetch signing files
#     script: |
#       # You can allow creating resources if existing are not found with `--create` flag
#       app-store-connect fetch-signing-files "com.onsitemanagementapp.oma" \
#         --type IOS_APP_STORE \
#         --create
#   - name: Set up signing certificate
#     script: keychain add-certificates
#   - name: Set up code signing settings on Xcode project
#     script: xcode-project use-profiles
# #       name: Get Flutter packages
# #       script: cd . && flutter packages pub get         
# #       name: Install pods
# #       script: find . -name "Podfile" -execdir pod install \;
# #       name: Flutter build ipa and automatic versioning
# #       script: |
# #           flutter build ipa --release \
# #           --build-name=6.0.0 \
# #           --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
# #           --export-options-plist=/Users/builder/export_options.plist

# definitions:
#   environment:
#     browserstack_ios_deployment: &browserstack_ios_deployment
#       groups: browserstack_creds



# definitions:
#   cool_vars: &cool_vars
#     meow: 'testing'
#   instance_mac_pro: &instance_mac_pro
#     instance_type: mac_pro
#     max_build_duration: 120
#   env_versions: &env_versions
#     flutter: stable
#     xcode: latest
#     cocoapods: default
#   triggering:
#     events:
#       - tag
#     tag_patterns:
#       - pattern: 'v1.2'
#   environment:
#     automatic_ios_signing: &automatic_ios_signing
#       groups:
#         - appstore_credentials
#         - ios
#       vars:
#         BUNDLE_ID: "com.example.kobitionIntegration"
#         XCODE_WORKSPACE: "App.xcworspace"
#         XCODE_SCHEME: "App"
#         XCODE_CONFIG: "Release-dev"
#     browserstack_upload: &browserstack_upload
#       groups:
#          - appstore_credentials
#       vars:
#         TEST: '123'

# workflows:
#   ios-workflow:
#     name: iOS Workflow
#     <<: *instance_mac_pro
#     environment:
#         <<: *env_versions
#         <<: *automatic_ios_signing
#         vars:
#            <<: *cool_vars
      
#     instance_type: mac_pro
#     max_build_duration: 120
#     environment:
#       groups:
#         - appstore_credentials
#       vars:
#         XCODE_WORKSPACE: "Runner.xcworkspace"
#         XCODE_SCHEME: "Runner"                
#         BUNDLE_ID: "com.example.kobitionIntegration"
#         APP_STORE_ID: 1625065284

# #         APPPATH: "build/ios/ipa/kobition_integration.ipa"
# #         APP_KEY: "123"

#       flutter: stable
#       xcode: edge
#       cocoapods: default
#     scripts:
#       - name: Firebase
#         script: |
#           flutter pub add firebase_core
#           flutter pub add firebase_messaging

    
#       - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
#         script: |
#           keychain initialize
#           /usr/local/bin/docker --version
#           echo $CREDS
#           echo $Test
#       - name: Fetch signing files
#         script: |
#           app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_ADHOC --create
#       - name: Use system default keychain
#         script: |
#           keychain add-certificates
# #       - *codesign
#       - name: Set up code signing settings on Xcode project
#         script: |
#           xcode-project use-profiles
#       - name: Get Flutter packages
#         script: |
#           cd . && flutter packages pub get         
#       - name: Install pods
#         script: |
#           find . -name "Podfile" -execdir pod install \;
     
          
#       - name: Flutter Integration Tests iOS
#         script: |
#            flutter emulators --launch apple_ios_simulator
#            xcrun simctl boot 0B315533-768E-47B9-AC74-94CDF3FAE84F
#            flutter -d 0B315533-768E-47B9-AC74-94CDF3FAE84F test integration_test
#       - name: Flutter build ipa and automatic versioning
#         script: |
#           flutter build ipa --release \
#           --build-name=6.0.0 \
#           --build-number=$(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1)) \
#           --export-options-plist=/Users/builder/export_options.plist
# #       - name: BrowserStack upload
#         script: |      
#               curl -u "$CREDS" -X POST "https://api-cloud.browserstack.com/app-live/upload" -F "file=@build/ios/ipa/kobition_integration.ipa"
#               echo $TEST

#       - name: Pcloudy
#         script: |
#           curl -X POST -F "file=@/build/ios/ipa/kobition_integration.ipa" -F "source_type=raw" -F "token=93zqy94twt7325vhkg49cbkf" -F "filter=all" https://device.pcloudy.com/api/upload_file

#       - name: Kobiton integration
#         script: |       
#          APP_URL=$(curl -X POST https://api.kobiton.com/v1/apps/uploadUrl \
#           -H 'Authorization: Basic bmloYWxuZXZlcmNvZGU6YzBlYjVhYjQtM2YzZi00M2MwLTkzMjUtMWVhNDczMzQ5Y2E4' \
#           -H 'Content-Type: application/json' \
#           -H 'Accept: application/json' \
#           -d "{\"filename\": \"kobition_integration.ipa\"}" | jq -r '.url')
          
#          APP_PATH=$(curl -X POST https://api.kobiton.com/v1/apps/uploadUrl \
#           -H 'Authorization: Basic bmloYWxuZXZlcmNvZGU6YzBlYjVhYjQtM2YzZi00M2MwLTkzMjUtMWVhNDczMzQ5Y2E4' \
#           -H 'Content-Type: application/json' \
#           -H 'Accept: application/json' \
#           -d "{\"filename\": \"kobition_integration.ipa\"}" | jq -r '.appPath')
          
#          curl -T "${APPPATH}" \
#           -H 'content-type: application/octet-stream' \
#           -H 'x-amz-tagging: unsaved=true' \
#           -X PUT "${APP_URL}"
          
#          curl -X POST https://api.kobiton.com/v1/apps \
#           -H 'Authorization: Basic bmloYWxuZXZlcmNvZGU6YzBlYjVhYjQtM2YzZi00M2MwLTkzMjUtMWVhNDczMzQ5Y2E4' \
#           -H 'content-type: application/json' \
#           -d "{\"filename\": \"kobition_integration.ipa\", \"appPath\": \"${APP_PATH}\"}"
#     artifacts:
#       - build/ios/ipa/*.ipa
#       - /tmp/xcodebuild_logs/*.log
#       - flutter_drive.log
# #     publishing:
#       app_store_connect:
#         api_key: $APP_STORE_CONNECT_PRIVATE_KEY         
#         key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER       
#         issuer_id: $APP_STORE_CONNECT_ISSUER_ID         
#         submit_to_app_store: true 
#         release_type: AFTER_APPROVAL






workflows:
  android-workflow:
    name: Android Workflow
    max_build_duration: 120
    instance_type: linux_x2
    environment:
      vars: 
          CM_KEYSTORE: Encrypted(Z0FBQUFBQmcwbDY4ZXpPX2hteWxOSkNQU0ZIOWExN1BkZm5DX1VUMXVYbnVSLUtiMVhhMGVqT1ZHVUEweFZlamhDNEpNRXJ6LVQ1TU9QX0E5ZDdycmNjaVQzdHBrY0hpSnZsUl80T2NnWHJnVmc5ZWJHX2tlNkk4WHZYTUJMR01HUXZOVHoxWDhyX0dYVUExbjQyeGZrQ29ObjdfTTNQa1hfUnRkQVlTY3FLOGlPaS1ncWI0ZmlVVFVjc09QZU14TXlLYjRpVF9IcHRZLVFPNkV5Z0xKUzA2dlpFWkQwYnFuMkx0VWNGX1VTaU9UZnVTcWpudDhWakgwOHhnT19TQ3h4M0RORUNNQ1liQks0R1RvZDZxQnByT29zOGJFdVk4RnJSdXRBSy1HaW9JVnJUdVlndS1VZkNET285WDdCaUZhVUZDN1YtTExkem5uSXZmZERSMkI5eHM0cGlWZUlLQkxkTFVWNEd4TFRNYl9uOUFlTi1wMXlld1NsZWQ5eG5fcmdJdDNPYW10alZ5ZWhVNWFjb3E3Q1ZmNTJkTjdYcEh3WnpITlltSDhCS0EwY2FIZFg0b0NsblZUY1BKaHJYc3FueWh3UWd3WkhjaUJJaUpKanNRWG1PVnpOVFVOcDhvS19uZF9aVUZkVnIwSUlSYTRZd25RRGJnc3AyRkFVZHJSR0ZaS1hYUmI3SlpmcG5USlpHQi1NMFJWWFVST19pLWVsZEgzTk5CNFhLS3NZRXNhQUVjdHp2ZUNBdWpWTlRmYldxUjFMMndncVk1Nk5rTW9MNldjV3RrR3NwYXhsVVNSNUNpWE5TcnltY2E4bnNhLUk5Ry1pd1RXZVJxWTU0V0w2SUhDbVRobkFReFo3Vk5TVm54N1g1SFdVTVFDdUZROTRmZEE3a1dKeWEyaFlrYWRFLXJQaHNLdk1XcTBIV0tlUmFiLW5BYXlyZWNlOWpyd2dkSWl3Zk8xR3JpWmhQTDFPeUZPMXI2RHo0SFdudGh0X01rNHJPVXhuT1ZabkxmaUJ6Vjl6cjRMZXgxWE9EUjRKVkVYY0lHRDdHcVFMODBjVHo5UXcwLW5kSEhCR1dPVWtYYWVSMUxTb3BERmU3ZTZBYlQtNEViaXU3UkEtZ0hrVURRa0p3YmRnT1hfdkFJWXVaWE1Vcmw0T1ZMYXVGT2dVbzV0dWJ6V3pTUkhBQmh5d3FfWUJxLUN5VFVyMmhITVprd2NFb2hHOURfOHRwcGtLT210Z256RFlTLVI3cmMxaWY0dEFDYmJudG1GRTI4Qmo4YTJpaG9jTGVHdG1VbHRpM3hFcUlOYV9RWVl1bzN2Vk1XTEhfdXRXaWFDcUFRZXJyc3h1SlA3TWo3WlJRVFhxYlZFRHlkSHkweUtQbnlFaWV3Tmx5UkIyNmR4RXF6TTJXRmpCMDRCWVd1Z281dF8tNjlYSWRqbUdMY3JuZU42clIxanZWWmlVcXl5dFlYRXB5QVA3OGNZMGo4ektNNG9rSkNWby1NTHRxVGJXcG16XzJlbG1FaDY2X3dIUjV1Q2JoZGVYc1ZxU2t3UHRDOFpwYXNoejFSZElMWU1ON0xSeE1aX0N6bU94bklvV0ZXcWZvUXFZbTFZN256eU9VNnd0Q3ByVFBkU3U5QlJLR0lRRXROMXdJTmxjS3FKbUJod1FGbGM5UUdkLU5VRjdsQnFEVVE0MVFzN2lGaWg5dTZlTTlJUlJqa1ozcHRqX1hrOHR1YU9jUkY2SEUwNk5pQndTOUIxcTFpQU9lcW9uN3ZPeFlDN0tiM09hSWhtVVhQVjktdGVZXzB2emozZ1N5VG5OT1FWc1M0emR0Yk1QQWVyS0VUSUM5azlaZmJGcnN1dG4xWVN5RFdjUUhXWDY2d1JTTm1RUWU1eVZuRk1VM1hxWUZ3QlZvNHg4ME9UY0I5cnZrQVBnWU9FRW03WXJ3LU1HT3BibUhMSnA3VHpSekY5WFJnQ25acXBJOUNkaFpXemJrSUNHS2dXNFl4T1FFOHlLdWR4cEVFeE5VRFVpVHRTVlFURWFiV2IzQ2lxLWFhSk01cnZXX1lBeDFOWE5jN3JtdzYyNHlHbHAxYzFpTmVYUXZJd3RKcW9pNGw3cmMxX3d4dl9sQ1kxbTVCandoN2NKY3FLbmpObEdQSklTeGR0Wk1UcG5OLW9wcjZONHRxbWxRSEtRbVpNSE1HUmduVG81SDJfczBid2NoZlkwRDlmazd5ZHFsV1E4bFhCZG05a1ZYLXVSNEJzQjJabWNxSmZkOFRqSzZfUm5La05pOEo2anVOemFBZTRfXzlKTmlmNVQta01rQjBpUnVPeElLT28zTklGNzRJczdRT2s5b1NpUTFxclp0Y0xzXzdWTWZ6dGYxQ093YVJ0ZTdJMFJFZFBNdkJCVTJNV1E0b0NUZjJwdElsQnNvNFdrUklwSGpGY3lrLTk4TmJ6eU5WekllQU9TdmtHSHNNbG1IZ1NDNGZPWUh0QkY5N2Z5UmV6S3Z2Tk9OSWcwUWx3QnFMSGdxdmx4NVRXemFSMmJtWTA3UFpaRjZCM3lWTHhlNHBCaUVjX1hoYng3d0FpT3FRdVRTU3BYa2RaUWYxVTBudlVNUEtZM3htVVJIYUxuN1dhaGNXaERnbG9PN2dvN0RYU1RyQVU3alB2ZEYxT1M2TUxYTWN0akREbjNRWjhpbzhjVnJVaEdIUVNBeVhnTzNWNnVQeExLMWY1Yi0xNVBlU2M3NlNrdllLNlRfbno5aU9qRmZCYlZWVTRqV3hKWElYTUF2LVB2c0U0cEpGemVIVUNOSFhqN3d6RXVLcEFjLUMtY20zVW84amdPTFc5U0x1Q0hVeFQzdWUzdlFUazdRU2hpSE11VHBpSjhWWUtNUUhGQ1I1WWdzZ01DVFAzVElvNzVLMEVYNlFHaGlnaEJ0UGZrS3ZlMmJ5MFY4eXNZVm8ybUxMUVV3LTNJWkF1VmdxWmpNVkhwSjYxYllMVkJnYzZVM2hXS0FvRW1IMzh3eTQ3REZYc1BVNVJnbHIzVTljMXNYQ2M3b2t3aEhXckM3dmZiYmNnamVoTkxLU2kwUGhYX3h1eW1kYXo3ekhidXhCbVZNN3N4UXZzV2UxcXh1NWdtTXpLOEJ3VUNfbDM2eW1YZ0FxYmZCMEU4VW4xRWFpSjdkUHRsUTVGYWJmOFV6c24tS1d0NzAtdFppXzNPME1sNTh0cEJPT0xCWFVlQUN5MTFSdGFTM3F4Z0NaMkhLRXJqc1ZwZkZKSlhjaFp5ODctbHQ2aDZkT05pTHJEZzM2cDJKdmwtN0pZNF9wQ2p4cUZhREY3X0NWdFlUMGc4UTFOcEpBQ0tiYld5UGRnaGlWZjFvc0Z1eUVFckF5SEpoSV9wWHBQaV9HWURfelZQTUduRWxJSmpVakxmbVRSUmU2SlVTNlktSUhKYzl2eVVrV2pjMkNhNV93dWYtelZHTXE2YlFUank3ZEp1V042dlhNSms3amtwU3QzUzVrY0I2cjI1TkZtVnlneHV6N2RZU3dsQ1M0a1pxbndPMzZnZHk3MUJuUkNFMGQ4MzhpamJsZHNJYWM2QUpaVE9wTXBJaVFRNncwbGxneV85UWZQcWNSMHJjdVJnaVNMRVoxZGxUS3dpOGN5V0V2SXFlcU5RbWJuUEJMVTYwZjQ1MUVNU09XVWhRWkVFZmtlRHlZdlU5NE5ZcnhnbWRSTjBCdHFBMXdqWFBwWmFyb3NoSHpMU0hpSXp4bFBFcVNTb2dnTGJ6QUo3aXZkVW5kR2FiWFZ3YmtLaGRtVm5OOUtxOEZ3eTFVcXhnVWh3VUxnVVJtMm9GdzFCbnVzTTA4akZ3cG1xeDM1SmVXbXZXS0hmeTFXeF9hLURlVmJ0MFRFbm1iUWRfVDhIcGtlcW9GMXh6WjAzTXc3em9tNkdDdVVOTmROYlFaQ0FCSmczS0JKQkIwUENWSzN0bUZ6ZTFjamVuZGJWWUM4NkdUakE3TTZqeEtETmctb2Q2S00xTDUwd1VURkg3RWU0UkZ0VTgyLWVnZzJLekRMSmkydDh5M3lwc3pGZTEtN054aXVtenFrWnkyTFFLQTRJQ2htZ3YwTHROTGxsc0VXNGlNYjRPekdOMkI0WkJ6VU1IWDRfZ3phTUNjNEw0ODMySXdjTi13SWZEMm9ZLWtZcWtHVndYM29valFlN0U4R0wxZjViSWJHZGRya3E1V1ZsSDlfOHJZbEFiNzlXdjY2NUE3RVNVbVZveE52c3RocWNUSVM1UGw3aklsMEtUZzExMnFyRS1nMlpvbnRYS2prX1FkQzlvTjBxWWdBdGN3RkwwWk1aUVpnMG5BbzdQbk5MNi1wM0VWcDgzY1VQU1dxZ3N3SG9UbGNYdWxhT0Y3WWRzRkNIbl9fSWlScW9OTl9fTjVBYjFaelBwZ1NSUkVxNndlTEZjeU1aSWZXUFZvM3A1V2dNVGxaTWFfQnFucUpLLTNMaUV1NF8zN0UyX0tobk0xY0FaVHBlS0E5S1EtMjJudGM1RkJFdjV4dlFVclhwWkZlOGpCTHFvd0wyTnA1bXhhSTRHSHRKZk1NZExyb2VQYlE1QVhBSzhWYXFQMDlHZG5CR0QtOFl1UG1ZN3V5cTFoUXg1OGxWVEg0OW5FUm1iNEVVZDNJd08wSnpqTVJCUW5YV1ZVbDBzOUg0M1FWNjZsNEZyczJhaWg4SUlHaDdOck1udWV2Y01BWVdLZDhONkMzLXVXVWRzYTh5ZjdzeDNRX1k0TTlfUDBqNV96VlNEVnVUeEVDamdlOVI4anNGMGpMYTM4Q1JZbmdfU05TX3NjdGwwZFBab01IcGo0a0hncmdMc0tsZG1lZ0IwVzV2d3hkaXcwYWJLS1V5b0pRLUFoYzZnbTZpbFRVMDlRQ0dNVUxOcW9NLWNMd1ZncEE3V21MZ1M2R0lYVVotV2c5TmdvNTYwU3hzUlhpQVloS20wb3psRERpazVjN1NDWmFvU1JTRmFsbXRUaXZBUWxhUGE3c2FlSGFCckRJSWExc3dyVE45bHpzNjJJbTBYa2p0bkxKOGhzYWoxSGNleHpNNFB2VGluNU5oYnNaSXEzLXJTWVk0S2JwazdmSEY3SUx4S0xFQTNPMUVJcEZzdms1ZFZDbV9ERGEtRFZXdTU5X2t6TVZLcnFEcUx5YUpVZ2FBM0NZM0UyeTlxTS1ScWpUNDAzb0ROdVJQTk9ZdlU0bUF6dXJnRjhQMWdWeWItdnA4YTZwVC0yV2RtVm9PT0ZZazlIb21UbHpIMEN6RHR2bXUyMlRoLTN0dF9GcEtjbWZ2NHBsTmZPeHVZbmVENm1KanRvb1VTaDhnWEFXVWZsNm04N3VYZ2c3bFJqb3RyMGtqR1VoemhYUUdZTVJKb0t3dUpSTkR0elhQTVdNVDlYTDRMbnA0ZHZoV3pBQThOUVdCTkoxYnRnYU9IZi1QM1hPSlR3akNJcDdqOD0==) # <-- Put your encrypted keystore file here
          CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmcwbDdiZmM5aEJpSlVKUlNUUVRhUVczUnh0M1NaaFJ6NjJTMWhiT2R0VHJMdDBpOUM3aDhsU1l2aUtMNzNvd2Q5YlF1dlBYWmJpUFVYakhsUGhHVC1nSW41bEE9PQ==) # <-- Put your encrypted keystore password here
          CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmcwbDdiZmM5aEJpSlVKUlNUUVRhUVczUnh0M1NaaFJ6NjJTMWhiT2R0VHJMdDBpOUM3aDhsU1l2aUtMNzNvd2Q5YlF1dlBYWmJpUFVYakhsUGhHVC1nSW41bEE9PQ==) # <-- Put your encrypted keystore alias password here
          CM_KEYSTORE_PATH: /tmp/keystore.keystore
          CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmcwbDcweUxYUmxxaTVEeFhxY0hTQWVteUlTMWhiNzVpazlERUFNR1g5akMxLTA4NjVKaXJ2dEdVdDhDRVV5WlNqa25kTW1raDJuYlRiT2o2YW1qTmpMWDc4akE9PQ==) # <-- Put your encrypted keystore alias username here 
      flutter: 2.8.1
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up key properties
        script: |
          echo $ANDROID_FIREBASE_SECRET > $FCI_BUILD_DIR/android/app/google-services.json
          echo $FCI_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEY_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=/tmp/keystore.keystore
          EOF
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          cd . && flutter packages pub get
      - name: Build AAB with Flutter
        script: |
          flutter build apk --release 
#       - name: Flutter Integration Tests iOS
#         script: |
#           mkdir -p test-results-ios
#           flutter devices
#           xcrun simctl list
#           flutter emulators --launch apple_ios_simulator
#           flutter -d iPad-Pro test --machine > test-results-ios/flutter.json integration_test
#           flutter -d 99B14BF4-7966-4427-ACD1-34BFE4D26A01 test --machine > test-results-ios/flutter.json integration_test
#           flutter devices
#         test_report: test-results-ios/flutter.json
#         ignore_failure: true
  
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
      - test-results-ios/*.json

